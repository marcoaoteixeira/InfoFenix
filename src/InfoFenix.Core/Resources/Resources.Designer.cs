//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfoFenix.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InfoFenix.Core.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS [document_directories] (
        ///    [document_directory_id] INTEGER PRIMARY KEY AUTOINCREMENT,
        ///    [label]                 TEXT                NOT NULL,
        ///    [directory_path]        TEXT                NOT NULL,
        ///    [code]                  TEXT                NOT NULL,
        ///    [watch]                 INTEGER             NOT NULL,
        ///    [index]                 INTEGER             NOT NULL,
        ///
        ///    CONSTRAINT [UQ_directory_path] UNIQUE ([directory_path])
        ///);
        ///
        ///CREATE TABLE IF NOT EXISTS [do [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateSchema {
            get {
                return ResourceManager.GetString("CreateSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///    [document_directory_id],
        ///    [label],
        ///    [directory_path],
        ///    [code],
        ///    [watch],
        ///    [index]
        ///FROM [document_directories]
        ///WHERE
        ///    (@Label IS NULL OR ([label] LIKE &apos;%&apos; + @Label + &apos;%&apos;))
        ///AND (@DirectoryPath IS NULL OR ([directory_path] LIKE &apos;%&apos; + @DirectoryPath + &apos;%&apos;))
        ///AND (@Code IS NULL OR ([code] LIKE &apos;%&apos; + @Code + &apos;%&apos;))
        ///AND (@Watch IS NULL OR ([watch] = @Watch))
        ///AND (@Index IS NULL OR ([index] = @Index));.
        /// </summary>
        internal static string ListDocumentDirectories {
            get {
                return ResourceManager.GetString("ListDocumentDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///    [documents].[document_id],
        ///    [documents].[document_directory_id],
        ///    [documents].[full_path],
        ///    [documents].[last_write_time],
        ///    [documents].[code],
        ///    [documents].[indexed],
        ///    [documents].[payload]
        ///FROM [documents]
        ///    INNER JOIN [document_directories] ON [document_directories].[document_directory_id] = [documents].[document_directory_id]
        ///WHERE
        ///    [document_directories].[document_directory_id] = @DocumentDirectoryID;.
        /// </summary>
        internal static string ListDocumentsByDocumentDirectory {
            get {
                return ResourceManager.GetString("ListDocumentsByDocumentDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [documents]
        ///WHERE
        ///    [document_id] = @DocumentID;.
        /// </summary>
        internal static string RemoveDocument {
            get {
                return ResourceManager.GetString("RemoveDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR REPLACE INTO [documents] (
        ///    [document_id],
        ///    [document_directory_label],
        ///    [full_path],
        ///    [last_write_time],
        ///    [code],
        ///    [indexed],
        ///    [payload]
        ///) VALUES (
        ///    @DocumentID,
        ///    @DocumentDirectoryLabel,
        ///    @FullPath,
        ///    @LastWriteTime,
        ///    @Code,
        ///    @Indexed,
        ///    @Payload
        ///);
        ///SELECT MAX([document_id]) FROM [documents];.
        /// </summary>
        internal static string SaveDocument {
            get {
                return ResourceManager.GetString("SaveDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR REPLACE INTO [document_directories] (
        ///    [document_directory_id],
        ///    [label],
        ///    [directory_path],
        ///    [code],
        ///    [watch],
        ///    [index]
        ///) VALUES (
        ///    @DocumentDirectoryID,
        ///    @Label,
        ///    @DirectoryPath,
        ///    @Code,
        ///    @Watch,
        ///    @Index
        ///);
        ///SELECT MAX([document_directory_id]) FROM [document_directories].
        /// </summary>
        internal static string SaveDocumentDirectory {
            get {
                return ResourceManager.GetString("SaveDocumentDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [documents] SET
        ///    [indexed] = @Indexed,
        ///    [payload] = @Payload
        ///WHERE [document_id] = @DocumentID.
        /// </summary>
        internal static string SetDocumentIndexed {
            get {
                return ResourceManager.GetString("SetDocumentIndexed", resourceCulture);
            }
        }
    }
}
